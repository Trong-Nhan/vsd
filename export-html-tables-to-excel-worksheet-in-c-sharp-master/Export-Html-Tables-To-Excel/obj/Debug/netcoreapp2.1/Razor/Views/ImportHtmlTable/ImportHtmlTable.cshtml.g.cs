#pragma checksum "C:\Users\Admin\Desktop\export-html-tables-to-excel-worksheet-in-c-sharp-master\Export-Html-Tables-To-Excel\Views\ImportHtmlTable\ImportHtmlTable.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "73fad6e8ca2bd2588084ebf8c668a3ab63c1d504"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_ImportHtmlTable_ImportHtmlTable), @"mvc.1.0.view", @"/Views/ImportHtmlTable/ImportHtmlTable.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/ImportHtmlTable/ImportHtmlTable.cshtml", typeof(AspNetCore.Views_ImportHtmlTable_ImportHtmlTable))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\Admin\Desktop\export-html-tables-to-excel-worksheet-in-c-sharp-master\Export-Html-Tables-To-Excel\Views\_ViewImports.cshtml"
using ImportHtmlTable;

#line default
#line hidden
#line 2 "C:\Users\Admin\Desktop\export-html-tables-to-excel-worksheet-in-c-sharp-master\Export-Html-Tables-To-Excel\Views\_ViewImports.cshtml"
using ImportHtmlTable.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"73fad6e8ca2bd2588084ebf8c668a3ab63c1d504", @"/Views/ImportHtmlTable/ImportHtmlTable.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a74faf55486f7b1210b69cb0fafd6fe9ee69659f", @"/Views/_ViewImports.cshtml")]
    public class Views_ImportHtmlTable_ImportHtmlTable : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 1, true);
            WriteLiteral("\n");
            EndContext();
#line 2 "C:\Users\Admin\Desktop\export-html-tables-to-excel-worksheet-in-c-sharp-master\Export-Html-Tables-To-Excel\Views\ImportHtmlTable\ImportHtmlTable.cshtml"
  Html.BeginForm("ImportHtmlTable", "ImportHtmlTable", FormMethod.Post);
        {

#line default
#line hidden
            BeginContext(84, 1342, true);
            WriteLiteral(@"    <div class=""Common"">
        <div class=""tablediv"">
            <div class=""rowdiv"">
                <p>
                    Essential XlsIO supports importing HTML tables into Excel worksheets. The ImportHtmlTable method loads an HTML file and imports all the tables in the file to the worksheet.
                </p>
                <b>Features:</b>
                <br />
                <ul>
                    <li>Imports HTML table</li>
                    <li>Imports with table formatting </li>
                </ul>
                <br />
                <label>
                    Click the ""Input Template"" button to view the HTML input document and click the ""Import"" button to view the output Excel document. Please
                    note that Microsoft Excel Viewer or Microsoft Excel is required to view the Excel document.
                </label>
            </div>
            <br />
            <div class=""rowdiv"">
                <div class=""celldiv"">
                    <input id=""viewtemplate");
            WriteLiteral(@""" class=""buttonStyle"" type=""submit"" name=""button"" value=""Input Template"" style=""width:125px;"" />
                    &nbsp;&nbsp;&nbsp;
                    <input class=""buttonStyle"" type=""submit"" name=""button"" value=""Import"" style=""width:125px;"" />
                </div>
            </div>
        </div>
    </div>
");
            EndContext();
#line 32 "C:\Users\Admin\Desktop\export-html-tables-to-excel-worksheet-in-c-sharp-master\Export-Html-Tables-To-Excel\Views\ImportHtmlTable\ImportHtmlTable.cshtml"
            Html.EndForm();
        } 

#line default
#line hidden
            BeginContext(1466, 1, true);
            WriteLiteral("\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
